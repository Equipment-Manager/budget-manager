version: "3.8"
services:
    web:
        image: nginx:1.19-alpine
        container_name: laravel-web
        working_dir: /application
        volumes:
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - .:/application
        networks:
            - laravel
        ports:
            - ${EXTERNAL_WEBSERVER_PORT}:80
        restart: unless-stopped

    php:
        build:
            context: docker/php
            dockerfile: Dockerfile
            args:
                XDEBUG_HOST: ${XDEBUG_HOST}
                XDEBUG_PORT: ${XDEBUG_PORT}
                XDEBUG_INSTALL: ${XDEBUG_INSTALL}
                XDEBUG_START_WITH_REQUEST: ${XDEBUG_START_WITH_REQUEST}
                XDEBUG_MODE: ${XDEBUG_MODE}
                XDEBUG_LOG_LEVEL: ${XDEBUG_LOG_LEVEL}
        container_name: laravel-api
        working_dir: /application
        user: ${CURRENT_UID}
        volumes:
            - .:/application
        networks:
            - laravel
        restart: unless-stopped

    database:
        image: mysql:5.7
        container_name: laravel-database
        environment:
            - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
        ports:
            - ${DB_PORT}:3306
        networks:
            - laravel
        restart: unless-stopped

    node:
        container_name: laravel-node
        image: node:16.5.0-alpine3.12
        working_dir: /application
        volumes:
            - .:/application
        networks:
            - laravel
        restart: unless-stopped

networks:
    laravel:
        driver: bridge

volumes:
    data:
        name: mysql-data
